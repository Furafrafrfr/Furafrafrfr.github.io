{"version":3,"file":"component---src-pages-index-js-52ea9a4bc7c173421e7d.js","mappings":"8OAOe,SAASA,EAASC,GAC/B,ICJ0BC,EDIpBC,GAAOC,EAAAA,EAAAA,gBAAe,aAwBrBC,GAAcC,EAAAA,EAAAA,MAArB,GAIMC,EAAUJ,EAAKK,wBAAfD,MAMN,ICtC0BL,EDmCGG,EClCtBI,MAAMC,KAAKR,EAAIS,WDmCMC,OAAM,SAAAC,GAAG,OAAKA,KAIxC,OAAON,EAAML,KAAI,WAAcY,GAAd,IAAGC,EAAH,EAAGA,QAAH,OACf,gBAACC,EAAD,CAAMC,SAAUF,EAAQG,oBAAoBC,YAAaC,IAAKN,OAKlE,IAAIO,EClDC,SAAmBnB,GACxB,OAAOO,MAAMC,KAAKR,EAAIoB,QDiDCC,CAAUlB,GAAYmB,QAAO,SAAAJ,GAAG,OAAIf,EAAWoB,IAAIL,MACtEM,EAAgBnB,EAAMiB,QAAO,gBAAGT,EAAH,EAAGA,QAAH,OAC/BM,EAAiBT,OAAM,SAAAe,GAAQ,OAC7BZ,EAAQG,oBAAoBC,YAAYQ,SAASC,SAASD,SAI9D,OAAOD,EAAcxB,KAAI,WAAcY,GAAd,IAAGC,EAAH,EAAGA,QAAH,OACvB,gBAACC,EAAD,CAAMC,SAAUF,EAAQG,oBAAoBC,YAAaC,IAAKN,OAIlE,SAASE,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SACd,OACE,gBAAC,EAAAY,KAAD,CAAMC,GAAIb,EAASc,KAAMC,UAAU,aACjC,2BAASA,UAAU,QACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,cAAcf,EAASgB,OACtC,gBAAC,IAAD,CAAiBN,SAAUV,EAASU,WAEpC,wBAAMO,SAAUjB,EAASkB,KAAMH,UAAU,aACtCf,EAASkB,S,i1BE9DP,SAASC,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,SAAUlC,EAAQ,EAARA,KAEnCmC,EAAoB,IAAIC,IAK5B,GAJApC,EAAKqC,YAAYb,SAASc,SAAQ,SAAArB,GAAG,OAAIkB,EAAkBI,IAAItB,GAAK,MAGrDiB,EAASM,OAASN,EAASM,MAAMhB,SAE9C,cAAgBU,EAASM,MAAMhB,YAA/B,kBAASiB,EAAT,QAAyCN,EAAkBI,IAAIE,GAAK,GAEtE,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAMC,QAAQ,MACd,gBAAC,KAAD,CAAexC,WAAYiC,GACzB,gBAACQ,EAAD,QAMR,SAASA,IACP,IAAOzC,GAAcC,EAAAA,EAAAA,MAArB,GACA,OACE,gBAAC,IAAD,KACE,wBAAM0B,UAAU,cACd,gCACA,uBACEe,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,aAAc,SAGhB,qCACCzC,MAAMC,KAAKL,EAAWiB,QAAQ6B,MAAK,SAAA/B,GAAG,OAAIf,EAAWoB,IAAIL,MACxD,gBAAC,IAAD,CAAuBgC,kBAAkB,IAEzC,uBACEL,MAAO,CACLM,MAAO,OACPC,OAAQ,WACRC,OAAQ,WAJZ,oBAWJ,gBAACvD,EAAD","sources":["webpack://gatsby-starter-hello-world/./src/components/postList.js","webpack://gatsby-starter-hello-world/./src/util/mapUtil.js","webpack://gatsby-starter-hello-world/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { CategoryTagList } from \"./category\"\nimport { useCategories } from \"../category/categoryState\"\nimport {keysArray, valuesArray} from \"../util/mapUtil\"\n\nexport default function PostList(props) {\n  const data = useStaticQuery(graphql`\n    {\n      allContentfulBlogPostV2(\n        sort: {\n          fields: content___childrenMarkdownRemark___frontmatter___date\n          order: DESC\n        }\n      ) {\n        nodes {\n          content {\n            childMarkdownRemark {\n              frontmatter {\n                category\n                date(formatString: \"YYYY-MM-DD\")\n                slug\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const [categories] = useCategories()\n\n  //選択されているカテゴリが全てカテゴリに含まれている記事をfilter()で探す。何も選択されてない場合は全部表示。\n  //それをmap()でPostにする\n  let { nodes } = data.allContentfulBlogPostV2\n\n  //categoriesでvalueが全てfalseの場合noSelectedをtrueに\n  let valueArray = valuesArray(categories)\n  let noSelected = valueArray.every(val => !val)\n\n  if (noSelected) {\n    //全て表示\n    return nodes.map(({ content }, index) => (\n      <Post pageData={content.childMarkdownRemark.frontmatter} key={index} />\n    ))\n  }\n\n  //選ばれたカテゴリを全て含むものだけ表示\n  let selectedCategory = keysArray(categories).filter(key => categories.get(key))\n  let filteredNodes = nodes.filter(({ content }) =>\n    selectedCategory.every(category =>\n      content.childMarkdownRemark.frontmatter.category.includes(category)\n    )\n  )\n\n  return filteredNodes.map(({ content }, index) => (\n    <Post pageData={content.childMarkdownRemark.frontmatter} key={index} />\n  ))\n}\n\nfunction Post({ pageData }) {\n  return (\n    <Link to={pageData.slug} className=\"post-link\">\n      <article className=\"post\">\n        <div className=\"post-data\">\n          <div className=\"post-title\">{pageData.title}</div>\n          <CategoryTagList category={pageData.category} />\n\n          <time dateTime={pageData.date} className=\"post-time\">\n            {pageData.date}\n          </time>\n        </div>\n      </article>\n    </Link>\n  )\n}\n","export function keysArray(map) {\n  return Array.from(map.keys())\n}\n\nexport function valuesArray(map) {\n  return Array.from(map.values())\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport \"../styles/style.css\"\nimport Page from \"../components/layout\"\nimport PostList from \"../components/postList\"\nimport { CategoryTagButtonList } from \"../components/category\"\nimport Head from \"../components/head\"\nimport { useCategories, CategoryScope } from \"../category/categoryState\"\n\nexport default function Home({ location, data }) {\n  //カテゴリの設定\n  let initialCategories = new Map()\n  data.blogContext.category.forEach(key => initialCategories.set(key, false))\n\n  //記事ページからカテゴリを指定されて飛んできたときにそのカテゴリをtrueな感じにする\n  let selected = location.state && location.state.category\n  if (selected)\n    for (let cat of location.state.category) initialCategories.set(cat, true)\n\n  return (\n    <React.Fragment>\n      <Head siteUrl=\"/\" />\n      <CategoryScope categories={initialCategories}>\n        <App />\n      </CategoryScope>\n    </React.Fragment>\n  )\n}\n\nfunction App() {\n  const [categories] = useCategories()\n  return (\n    <Page>\n      <main className=\"blog-posts\">\n        <h2>投稿</h2>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <div>カテゴリー：</div>\n          {Array.from(categories.keys()).some(key => categories.get(key)) ? (\n            <CategoryTagButtonList showOnlySelected={true} />\n          ) : (\n            <div\n              style={{\n                color: \"grey\",\n                margin: \"3px auto\",\n                height: \"1.5rem\",\n              }}\n            >\n              カテゴリーが選択されていません\n            </div>\n          )}\n        </div>\n        <PostList />\n      </main>\n    </Page>\n  )\n}\n\nexport const query = graphql`\n  query MyQuery {\n    blogContext {\n      category\n    }\n  }\n`\n"],"names":["PostList","props","map","data","useStaticQuery","categories","useCategories","nodes","allContentfulBlogPostV2","Array","from","values","every","val","index","content","Post","pageData","childMarkdownRemark","frontmatter","key","selectedCategory","keys","keysArray","filter","get","filteredNodes","category","includes","Link","to","slug","className","title","dateTime","date","Home","location","initialCategories","Map","blogContext","forEach","set","state","cat","siteUrl","App","style","display","flexDirection","marginBottom","some","showOnlySelected","color","margin","height"],"sourceRoot":""}