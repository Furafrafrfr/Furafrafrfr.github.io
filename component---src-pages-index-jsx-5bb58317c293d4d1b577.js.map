{"version":3,"file":"component---src-pages-index-jsx-5bb58317c293d4d1b577.js","mappings":"0PAMaA,EAAW,SAAAC,GACtB,IAAMC,EAAUD,EAAVC,MAECC,GAAeC,EAAAA,EAAAA,KAAtB,GAIA,OAAIC,EAAAA,EAAAA,GAAaF,GAAaG,MAAK,SAAAC,GAAG,OAAY,IAARA,KACjCL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACf,gBAACC,EAAD,CAAMC,SAAUF,EAAKG,YAAaC,IAAKJ,EAAKG,YAAYE,UAGnDZ,EACJa,QAAO,qBAAGN,KAAQG,YAAeI,SACvBC,OAAM,SAAAC,GAAC,OACdC,EAAAA,EAAAA,GAAWhB,GAAaG,MAAK,SAAAU,GAAQ,OAAIA,IAAaE,WAGzDV,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACN,OAAO,gBAACC,EAAD,CAAMC,SAAUF,EAAKG,YAAaC,IAAKJ,EAAKG,YAAYE,WAKvE,SAASJ,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SACd,OACE,gBAAC,EAAAS,KAAD,CAAMC,GAAIV,EAASG,KAAMQ,UAAU,aACjC,2BAASA,UAAU,QACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,cAAcX,EAASY,OACtC,gBAAC,KAAD,CAAcP,SAAUL,EAASK,WAEjC,wBAAMQ,SAAUb,EAASc,KAAMH,UAAU,aACtCX,EAASc,SCjCf,IAAMC,EAAQ,SAAC,GAAe,IAAbxB,EAAY,EAAZA,MACfc,GAAYZ,EAAAA,EAAAA,KAAnB,GACA,OACE,wBAAMkB,UAAU,cACd,gCACA,uBACEK,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,aAAc,OACdC,MAAO,SAGT,uBAAKJ,MAAO,CAAEK,WAAY,MAA1B,UACA,uBAAKL,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOI,SAAU,OAC5D5B,EAAAA,EAAAA,GAAaW,GAAUV,MAAK,SAAA4B,GAAU,OAAIA,KACzC,gBAAC,KAAD,MAEA,uBACEP,MAAO,CACLQ,MAAO,OACPC,OAAQ,UACRC,UAAW,SACXN,MAAO,SALX,qBAaN,gBAAC/B,EAAD,CAAUE,MAAOA,MCjBvB,EAda,SAAC,GAAuB,EAArBoC,SAAsB,IAAZC,EAAW,EAAXA,KACpBrC,EAAQqC,EAAKC,kBAAkBC,MAEnC,OACE,gBAACC,EAAA,EAAD,CACE/B,SAAU,GACVgC,SAAUJ,EAAKK,KAAKC,aACpBC,OAAQP,EAAKQ,KAAKC,gBAAgBC,UAElC,gBAACvB,EAAD,CAAOxB,MAAOA","sources":["webpack://gatsby-starter-hello-world/./src/components/index/postList.jsx","webpack://gatsby-starter-hello-world/./src/components/index/Index.jsx","webpack://gatsby-starter-hello-world/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { CategoryList } from \"../common/category\"\nimport { useCategory } from \"../../hooks/categoryState\"\nimport { getMapKeys, getMapValues } from \"../../util/mapUtil\"\n\nexport const PostList = props => {\n  let { posts } = props\n\n  const [allCategory] = useCategory()\n\n  //選択されているカテゴリが全てカテゴリに含まれている記事をfilter()で探す。何も選択されてない場合は全部表示。\n  //それをmap()でPostにする\n  if (getMapValues(allCategory).some(val => val === true)) {\n    return posts.map(({ node }) => (\n      <Post pageData={node.frontmatter} key={node.frontmatter.slug} />\n    ))\n  } else {\n    return posts\n      .filter(({ node: { frontmatter: { category } } }) =>\n        category.every(c =>\n          getMapKeys(allCategory).some(category => category === c)\n        )\n      )\n      .map(({ node }) => {\n        return <Post pageData={node.frontmatter} key={node.frontmatter.slug} />\n      })\n  }\n}\n\nfunction Post({ pageData }) {\n  return (\n    <Link to={pageData.slug} className=\"post-link\">\n      <article className=\"post\">\n        <div className=\"post-data\">\n          <div className=\"post-title\">{pageData.title}</div>\n          <CategoryList category={pageData.category} />\n\n          <time dateTime={pageData.date} className=\"post-time\">\n            {pageData.date}\n          </time>\n        </div>\n      </article>\n    </Link>\n  )\n}\n","import React from \"react\"\nimport { CategorySelector } from \"../common/category\"\nimport { PostList } from \"./postList\"\nimport { useCategory } from \"../../hooks/categoryState\"\nimport { getMapValues } from \"../../util/mapUtil\"\n\nexport const Index = ({ posts }) => {\n  const [category] = useCategory()\n  return (\n    <main className=\"blog-posts\">\n      <h2>投稿</h2>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginBottom: \"1rem\",\n          width: \"100%\",\n        }}\n      >\n        <div style={{ flexShrink: \"0\" }}>カテゴリー:</div>\n        <div style={{ display: \"flex\", flexDirection: \"row\", flexGrow: \"1\" }}>\n          {getMapValues(category).some(isSelected => isSelected) ? (\n            <CategorySelector />\n          ) : (\n            <div\n              style={{\n                color: \"grey\",\n                margin: \"0px 3px\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n            >\n              カテゴリーが選択されていません\n            </div>\n          )}\n        </div>\n      </div>\n      <PostList posts={posts} />\n    </main>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport \"../styles/style.css\"\nimport { App } from \"../components/App\"\nimport { Index } from \"../components/index/Index\"\n\nconst Home = ({ location, data }) => {\n  let posts = data.allMarkdownRemark.edges\n\n  return (\n    <App\n      pageData={{}}\n      siteData={data.site.siteMetadata}\n      avatar={data.file.childImageSharp.original}\n    >\n      <Index posts={posts} />\n    </App>\n  )\n}\n\nexport default Home\n\nexport const query = graphql`\n  query MyQuery {\n    site {\n      siteMetadata {\n        siteUrl\n        description\n        lang\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            category\n            date(formatString: \"YYYY-MM-DD\")\n            slug\n            title\n          }\n        }\n      }\n    }\n    file(name: { eq: \"newicon\" }) {\n      childImageSharp {\n        original {\n          src\n          width\n          height\n        }\n      }\n    }\n  }\n`\n"],"names":["PostList","props","posts","allCategory","useCategory","getMapValues","some","val","map","node","Post","pageData","frontmatter","key","slug","filter","category","every","c","getMapKeys","Link","to","className","title","dateTime","date","Index","style","display","flexDirection","marginBottom","width","flexShrink","flexGrow","isSelected","color","margin","textAlign","location","data","allMarkdownRemark","edges","App","siteData","site","siteMetadata","avatar","file","childImageSharp","original"],"sourceRoot":""}