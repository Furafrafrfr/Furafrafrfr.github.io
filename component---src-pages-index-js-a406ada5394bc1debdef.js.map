{"version":3,"file":"component---src-pages-index-js-a406ada5394bc1debdef.js","mappings":"wPAMe,SAASA,EAASC,GAC/B,IAAMC,EAAUD,EAAVC,MAECC,GAAeC,EAAAA,EAAAA,KAAtB,GAIA,OAAIC,EAAAA,EAAAA,GAAaF,GAAaG,MAAK,SAAAC,GAAG,OAAY,IAARA,KACjCL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACf,gBAACC,EAAD,CAAMC,SAAUF,EAAKG,QAAQC,oBAAoBC,YAAaC,IAAKN,EAAKG,QAAQC,oBAAoBC,YAAYE,UAG3Gd,EACJe,QACC,qBACER,KACEG,QACEC,oBACEC,YAAeI,SAKZC,OAAM,SAAAC,GAAC,OACdC,EAAAA,EAAAA,GAAWlB,GAAaG,MAAK,SAAAY,GAAQ,OAAIA,IAAaE,WAG3DZ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACN,OAAO,gBAACC,EAAD,CAAMC,SAAUF,EAAKG,QAAQC,oBAAoBC,YAAaC,IAAKN,EAAKG,QAAQC,oBAAoBC,YAAYE,UAK/H,SAASN,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SACd,OACE,gBAAC,EAAAW,KAAD,CAAMC,GAAIZ,EAASK,KAAMQ,UAAU,aACjC,2BAASA,UAAU,QACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,cAAcb,EAASc,OACtC,gBAAC,KAAD,CAAcP,SAAUP,EAASO,WAEjC,wBAAMQ,SAAUf,EAASgB,KAAMH,UAAU,aACtCb,EAASgB,S,i1BCtCP,SAASC,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAEnCC,EAAkB,IAAIC,IAK1B,GAJAF,EAAKG,YAAYf,SAASgB,SAAQ,SAAAnB,GAAG,OAAIgB,EAAgBI,IAAIpB,GAAK,MAGnDc,EAASO,OAASP,EAASO,MAAMlB,SAE9C,cAAgBW,EAASO,MAAMlB,YAA/B,kBAASmB,EAAT,QAAyCN,EAAgBI,IAAIE,GAAK,GAEpE,IAAInC,EAAQ4B,EAAKQ,wBAAwBC,MAEzC,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAMC,QAAQ,MACd,gBAAC,IAAD,CAAetB,SAAUa,GACvB,gBAACU,EAAD,CAAKvC,MAAOA,MAMpB,SAASuC,EAAT,GAAuB,IAATvC,EAAQ,EAARA,MACLgB,GAAYd,EAAAA,EAAAA,KAAnB,GACA,OACE,gBAAC,IAAD,KACE,wBAAMoB,UAAU,cACd,gCACA,uBACEkB,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,aAAc,SAGhB,sCACCxC,EAAAA,EAAAA,GAAaa,GAAUZ,MAAK,SAAAwC,GAAU,OAAIA,KACzC,gBAAC,KAAD,MAEA,uBACEJ,MAAO,CACLK,MAAO,OACPC,OAAQ,WACRC,OAAQ,WAJZ,oBAWJ,gBAACjD,EAAD,CAAUE,MAAOA","sources":["webpack://gatsby-starter-hello-world/./src/components/postList.js","webpack://gatsby-starter-hello-world/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { CategoryList } from \"./category\"\nimport { useCategory } from \"../category/categoryState\"\nimport { getMapKeys, getMapValues } from \"../util/mapUtil\"\n\nexport default function PostList(props) {\n  let { posts } = props\n\n  const [allCategory] = useCategory()\n\n  //選択されているカテゴリが全てカテゴリに含まれている記事をfilter()で探す。何も選択されてない場合は全部表示。\n  //それをmap()でPostにする\n  if (getMapValues(allCategory).some(val => val === true)) {\n    return posts.map(({ node }) => (\n      <Post pageData={node.content.childMarkdownRemark.frontmatter} key={node.content.childMarkdownRemark.frontmatter.slug}/>\n    ))\n  } else {\n    return posts\n      .filter(\n        ({\n          node: {\n            content: {\n              childMarkdownRemark: {\n                frontmatter: { category },\n              },\n            },\n          },\n        }) =>\n          category.every(c =>\n            getMapKeys(allCategory).some(category => category === c)\n          )\n      )\n      .map(({ node }) => {\n        return <Post pageData={node.content.childMarkdownRemark.frontmatter} key={node.content.childMarkdownRemark.frontmatter.slug}/>\n      })\n  }\n}\n\nfunction Post({ pageData }) {\n  return (\n    <Link to={pageData.slug} className=\"post-link\">\n      <article className=\"post\">\n        <div className=\"post-data\">\n          <div className=\"post-title\">{pageData.title}</div>\n          <CategoryList category={pageData.category} />\n\n          <time dateTime={pageData.date} className=\"post-time\">\n            {pageData.date}\n          </time>\n        </div>\n      </article>\n    </Link>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport \"../styles/style.css\"\nimport Page from \"../components/layout\"\nimport PostList from \"../components/postList\"\nimport { SelectedCategoryList } from \"../components/category\"\nimport Head from \"../components/head\"\nimport { useCategory, CategoryScope } from \"../category/categoryState\"\nimport { getMapValues } from \"../util/mapUtil\"\n\nexport default function Home({ location, data }) {\n  //カテゴリの設定\n  let initialCategory = new Map()\n  data.blogContext.category.forEach(key => initialCategory.set(key, false))\n\n  //記事ページからカテゴリを指定されて飛んできたときにそのカテゴリをtrueな感じにする\n  let selected = location.state && location.state.category\n  if (selected)\n    for (let cat of location.state.category) initialCategory.set(cat, true)\n\n  let posts = data.allContentfulBlogPostV2.edges\n\n  return (\n    <React.Fragment>\n      <Head siteUrl=\"/\" />\n      <CategoryScope category={initialCategory}>\n        <App posts={posts} />\n      </CategoryScope>\n    </React.Fragment>\n  )\n}\n\nfunction App({posts}) {\n  const [category] = useCategory()\n  return (\n    <Page>\n      <main className=\"blog-posts\">\n        <h2>投稿</h2>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <div>カテゴリー:</div>\n          {getMapValues(category).some(isSelected => isSelected) ? (\n            <SelectedCategoryList />\n          ) : (\n            <div\n              style={{\n                color: \"grey\",\n                margin: \"3px auto\",\n                height: \"1.5rem\",\n              }}\n            >\n              カテゴリーが選択されていません\n            </div>\n          )}\n        </div>\n        <PostList posts={posts} />\n      </main>\n    </Page>\n  )\n}\n\nexport const query = graphql`\n  query MyQuery {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    allContentfulBlogPostV2 {\n      edges {\n        node {\n          content {\n            childMarkdownRemark {\n              frontmatter {\n                category\n                date\n                slug\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n    blogContext {\n      category\n    }\n  }\n`\n"],"names":["PostList","props","posts","allCategory","useCategory","getMapValues","some","val","map","node","Post","pageData","content","childMarkdownRemark","frontmatter","key","slug","filter","category","every","c","getMapKeys","Link","to","className","title","dateTime","date","Home","location","data","initialCategory","Map","blogContext","forEach","set","state","cat","allContentfulBlogPostV2","edges","siteUrl","App","style","display","flexDirection","marginBottom","isSelected","color","margin","height"],"sourceRoot":""}